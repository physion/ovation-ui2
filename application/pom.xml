<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>us.physion</groupId>
        <artifactId>ovation-ui-parent</artifactId>
        <version>3.1.2</version>
    </parent>

    <artifactId>ovation-ui-app</artifactId>
    <packaging>nbm-application</packaging>

    <name>Application</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <all.clusters>${project.build.directory}/${brandingToken}</all.clusters>
        <ovation.release.repository.id>s3-ovation-release-repository</ovation.release.repository.id>
        <ovation.release.repository.url>s3://maven.ovation.io/release</ovation.release.repository.url>
        <physion.codesign.identity>Developer ID Application: Physion Consulting LLC</physion.codesign.identity>
        <ovation.updates.site.sourcedir>${project.build.directory}/netbeans_site</ovation.updates.site.sourcedir>
        <ovation.updates.repository.path>current</ovation.updates.repository.path>
        <ovation.updates.repository.url>s3://updates-ovation-io/</ovation.updates.repository.url>
        <ovation.updates.repository.id>s3-ovation-updates-repository</ovation.updates.repository.id>
        <ovation.appbundle.name>Ovation</ovation.appbundle.name>
        <launcher.dir>${project.build.directory}\${brandingToken}\bin</launcher.dir>
        <windows.ico>${basedir}\installer\ovation_48x48.ico</windows.ico>
        <bin.dir>${basedir}\bin</bin.dir>
        <dmg.artifact>${project.build.directory}/Ovation-${project.version}.dmg</dmg.artifact>
        <netbeans.run.params>${netbeans.run.params.ide}</netbeans.run.params>
        <netbeans.run.params.ide/>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-jellytools-platform</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.netbeans.cluster</groupId>
            <artifactId>platform</artifactId>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ovation-ui-branding</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- NbModuleSuite functional in RELEASE70 or later: -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-nbjunit</artifactId>
            <scope>test</scope>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ovation-ui-database-connection-provider</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-jdesktop-beansbinding</artifactId>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ovation-api-module</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ovation-ui-common-interfaces</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ovation-ui-imagej</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ovation-ui-browser</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ovation-ui-data-viewer</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>scrollable-table-tree</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ovation-ui-annotation-views</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ovation-ui-image-importer</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ovation-ui-query</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ovation-ui-osx</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!-- Disable zip except in deployment, set the final location of ovation.conf -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>nbm-maven-plugin</artifactId>
                <configuration>
                    <!-- setup ovation.conf for the final product -->
                    <etcConfFile>${basedir}/target/${brandingToken}.conf</etcConfFile>
                    <!--<additionalArguments>-J-DUSE_DEV_API_ENDPOINT=true</additionalArguments>-->

                </configuration>
            </plugin>

            <!-- Permits NbModuleSuite to be run in integration-test phase: -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <systemPropertyVariables>
                        <all.clusters>${all.clusters}</all.clusters>
                        <branding.token>${brandingToken}</branding.token>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <!-- Avoid jar goal -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>none</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Copy ressources ovation.conf and Info.plist with filtering (replacing 'project.version' by the actual version) -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>generate-app-conf-file</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>${brandingToken}.conf</include>
                                        <include>Info.plist</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <escapeString>\</escapeString>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <debug>true</debug>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- The deployment profile is built for daily releases. It builds the standalone
        zip and the autoupdate site. It can be used with deploy-dmg to include the dmg as well. -->
        <profile>
            <id>deployment</id>

            <build>
                <plugins>

                    <!-- NBM Plugin settings. Enable the zip, installer and autoupdate generation -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>nbm-maven-plugin</artifactId>

                        <configuration>
                            <installerLicenseFile>../licenses/license-GPL.txt</installerLicenseFile>
                            <installerOsLinux>false</installerOsLinux>
                            <installerOsMacosx>false</installerOsMacosx>
                            <installerOsWindows>true</installerOsWindows>
                            <installerOsSolaris>false</installerOsSolaris>
                            <installDirName>Ovation</installDirName>
                            <templateFile>${basedir}/installer/template.xml</templateFile>
                            <userSettings>
                                <nbi.icon.file>${basedir}/installer/ovation_48x48.png</nbi.icon.file>
                                <nbi.dock.icon.file>${basedir}/src/main/osx/ovation.icns</nbi.dock.icon.file>
                                <bin.dir>${basedir}\bin</bin.dir>
                                <app.ico.file>${basedir}\installer\ovation_48x48.ico</app.ico.file>
                                <launchers.dir>${project.build.directory}\installer\launchers</launchers.dir>
                                <ovation.version>${project.version}</ovation.version>
                            </userSettings>

                            <licenseName>GNU General Public License, Version 3</licenseName>
                            <licenseFile>../licenses/license-GPL.txt</licenseFile>
                        </configuration>

                        <executions>
                            <execution>
                                <id>default-standalone-zip</id>
                                <phase>prepare-package</phase>
                            </execution>

                            <execution>
                                <id>autoupdate</id>
                                <goals>
                                    <goal>autoupdate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile used along with the deployment profile to upload the update site -->
        <profile>
            <id>deploy-updates</id>
            <build>
                <plugins>
                    <!-- Upload the autoupdate site automatically -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>wagon-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>upload-jar-to-folder</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>upload</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <fromDir>${ovation.updates.site.sourcedir}</fromDir>
                            <includes>*</includes>
                            <url>${ovation.updates.repository.url}</url>
                            <toDir>${ovation.updates.repository.path}</toDir>
                            <serverId>${ovation.updates.repository.id}</serverId>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>

            <id>deploy-windows</id>
            <build>
                <plugins>

                    <!--Override to produce the windows installer-->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>nbm-maven-plugin</artifactId>
                        <configuration>
                            <userSettings>
                                <!-- A hard-coded jre folder must exist next to the ovation folder and contain the self-installing JREs-->
                                <ovation.bundled.jvm.folder>${basedir}/../../jre</ovation.bundled.jvm.folder>
                                <configuration.logic.file>${basedir}/installer/ConfigurationLogic.java</configuration.logic.file>
                                <nbi.stub.buildfile>${basedir}/installer/build.xml</nbi.stub.buildfile>
                            </userSettings>
                        </configuration>
                        <executions>
                            <execution>
                                <id>extra</id>
                                <!--Run post-package, but before install-->
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>build-installers</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>

                            <execution>
                                <id>update-launcher-icons</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>

                                <configuration>
                                    <target>
                                        <echo message="Updating Windows launcher icons ${line.separator}" />

                                        <unzip src="${project.build.directory}/${project.artifactId}-${project.version}.zip" dest="${project.build.directory}" overwrite="true">
                                            <patternset>
                                                <include name="**/ovation.exe" />
                                                <include name="**/ovation64.exe" />
                                            </patternset>
                                        </unzip>

                                        <exec dir="${launcher.dir}" executable="${bin.dir}\ReplaceVistaIcon.exe" osfamily="winnt">
                                            <arg value="${launcher.dir}\ovation.exe" />
                                            <arg value="${basedir}\installer\ovation_48x48.ico" />
                                        </exec>


                                        <exec dir="${launcher.dir}" executable="${bin.dir}\ReplaceVistaIcon.exe" osfamily="winnt">
                                            <arg value="${launcher.dir}\ovation64.exe" />
                                            <arg value="${basedir}\installer\ovation_48x48.ico" />
                                        </exec>

                                        <zip destfile="${project.build.directory}/${project.artifactId}-${project.version}.zip" update="true">
                                            <zipfileset dir="target/${brandingToken}/bin" includes="ovation*.exe" prefix="${brandingToken}/bin" />
                                        </zip>
                                    </target>
                                </configuration>
                            </execution>

                            <execution>
                                <id>sign-windows-installer</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>

                                <configuration>
                                    <target>
                                        <echo message="Signing Windows installer${line.separator}" />
                                        <copy file="${project.build.directory}/${project.artifactId}-${project.version}-windows.exe" tofile="${project.build.directory}/Install Ovation ${project.version}.exe" overwrite="true" />
                                        <exec dir="${project.build.directory}" osfamily="winnt" executable="C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Bin\signtool.exe">
                                            <arg value="sign" />
                                            <arg value="/t" />
                                            <arg value="http://timestamp.digicert.com" />
                                            <arg value="/n 'Physion LLC'" />
                                            <arg value="${project.build.directory}/Install Ovation ${project.version}.exe" />
                                        </exec>

                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile used along with deployment to attach the dmg archive -->
        <profile>
            <id>deploy-dmg</id>
            <build>
                <plugins>
                    <!-- Create the Mac OS X application bundle and dmg file -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>package-app-bundle</id>

                                <phase>package</phase>

                                <goals>
                                    <goal>run</goal>
                                </goals>

                                <configuration>

                                    <target>
                                        <echo message="Building OS X app bundle ${line.separator}" />

                                        <delete includeEmptyDirs="true" failonerror="false">
                                            <fileset dir="${project.build.directory}/${ovation.appbundle.name}.app" />
                                        </delete>

                                        <mkdir dir="${project.build.directory}/${ovation.appbundle.name}.app" />
                                        <mkdir dir="${project.build.directory}/${ovation.appbundle.name}.app/Contents/MacOS" />

                                        <copy todir="${project.build.directory}/${ovation.appbundle.name}.app/Contents/Resources/${brandingToken}">
                                            <fileset dir="${project.build.directory}/${brandingToken}" />
                                        </copy>

                                        <copy tofile="${project.build.directory}/${ovation.appbundle.name}.app/Contents/Resources/${brandingToken}.icns" file="${basedir}/src/main/osx/${brandingToken}.icns" />
                                        <copy tofile="${project.build.directory}/${ovation.appbundle.name}.app/Contents/Info.plist" file="${project.build.directory}/Info.plist" />


                                        <!-- Copy modified executable (with capitalized dock name and make sure it's executable -->
                                        <!--<delete file="${project.build.directory}/${ovation.appbundle.name}.app/Contents/Resources/${brandingToken}/bin/${brandingToken}" />-->
                                        <copy tofile="${project.build.directory}/${ovation.appbundle.name}.app/Contents/Resources/${brandingToken}/bin/${brandingToken}" file="${basedir}/src/main/osx/${brandingToken}" overwrite="true" />
                                        <chmod file="${project.build.directory}/${ovation.appbundle.name}.app/Contents/Resources/${brandingToken}/bin/${brandingToken}" perm="ugo+rx" />

                                        <copy tofile="${project.build.directory}/${ovation.appbundle.name}.app/Contents/MacOS/${brandingToken}" file="${basedir}/src/main/osx/${brandingToken}_launcher" overwrite="true" />
                                        <chmod file="${project.build.directory}/${ovation.appbundle.name}.app/Contents/MacOS/${brandingToken}" perm="ugo+rx" />

                                        <echo message="Signing app bundle ${line.separator}" />
                                        <exec dir="${project.build.directory}" os="Mac OS X" executable="codesign">
                                            <arg value="-fs" />
                                            <arg value="${physion.codesign.identity}" />
                                            <arg value="--deep"/>
                                            <arg value="-v" />
                                            <arg value="${ovation.appbundle.name}.app" />
                                        </exec>

                                        <echo message="Creating DMG ${line.separator}" />
                                        <exec dir="${project.build.directory}" os="Mac OS X" executable="/usr/local/bin/dmgcanvas">
                                            <arg value="${project.basedir}/src/main/osx/dmg_template.dmgCanvas" />
                                            <arg value="${dmg.artifact}" />
                                            <arg value="-volume" />
                                            <arg value="Ovation ${project.version}" />
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Attach the final DMG for deployment -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-dmg</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>attach-artifact</goal>
                                </goals>
                                <configuration>
                                    <artifacts>
                                        <artifact>
                                            <file>${dmg.artifact}</file>
                                            <type>dmg</type>
                                        </artifact>
                                    </artifacts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Deploy dmg artifact -->
                    <!--<plugin>-->
                        <!--<groupId>org.apache.maven.plugins</groupId>-->
                        <!--<artifactId>maven-deploy-plugin</artifactId>-->
                        <!--<executions>-->
                            <!--<execution>-->
                                <!--<phase>deploy</phase>-->
                                <!--<goals>-->
                                    <!--<goal>deploy-file</goal>-->
                                <!--</goals>-->
                                <!--<configuration>-->
                                    <!--<packaging>dmg</packaging>-->
                                    <!--<generatePom>false</generatePom>-->
                                    <!--<repositoryId>${ovation.release.repository.id}</repositoryId>-->
                                    <!--<url>${ovation.release.repository.url}</url>-->
                                    <!--<artifactId>${project.artifactId}-dmg</artifactId>-->
                                    <!--<groupId>${project.groupId}</groupId>-->
                                    <!--<version>${project.version}</version>-->
                                    <!--<file>${project.build.directory}/Ovation-${project.version}.dmg</file>-->
                                <!--</configuration>-->
                            <!--</execution>-->
                        <!--</executions>-->
                    <!--</plugin>-->
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>s3-ovation-updates-repository</id>
            <name>S3 Updates Repository</name>
            <url>s3://updates-ovation-io/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>
